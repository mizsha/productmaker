<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.1 on linux)" generated="20200225 23:48:47.494" rpa="false">
<suite id="s1" name="Atest" source="/media/EXT/app/work/applifting/productmaker/services/tests/api/atest">
<suite id="s1-s1" name="Healthcheck" source="/media/EXT/app/work/applifting/productmaker/services/tests/api/atest/healthcheck.robot">
<test id="s1-s1-t1" name="GET healtcheck method">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/system/healthcheck</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.106" endtime="20200225 23:48:48.139"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.139" endtime="20200225 23:48:48.141"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body status</arg>
<arg>OK</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.141" endtime="20200225 23:48:48.142"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:48.105" endtime="20200225 23:48:48.142" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="PATCH healtcheck method, negative test">
<kw name="Patch" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a PATCH request to the endpoint.*</doc>
<arguments>
<arg>/system/healthcheck</arg>
<arg>{}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.143" endtime="20200225 23:48:48.149"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>405</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.149" endtime="20200225 23:48:48.150"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:48.143" endtime="20200225 23:48:48.150" critical="yes"></status>
</test>
<doc>Test scenarios for healtcheck method.</doc>
<status status="PASS" starttime="20200225 23:48:47.524" endtime="20200225 23:48:48.151"></status>
</suite>
<suite id="s1-s2" name="Products" source="/media/EXT/app/work/applifting/productmaker/services/tests/api/atest/products.robot">
<test id="s1-s2-t1" name="CREATE random product">
<kw name="Sentence" library="FakerLibrary">
<doc>Generate a random sentence
:example 'Lorem ipsum dolor sit amet.'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20200225 23:48:48.156" level="INFO">${name} = Allow break discuss sense.</msg>
<status status="PASS" starttime="20200225 23:48:48.155" endtime="20200225 23:48:48.156"></status>
</kw>
<kw name="Sentence" library="FakerLibrary">
<doc>Generate a random sentence
:example 'Lorem ipsum dolor sit amet.'</doc>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20200225 23:48:48.157" level="INFO">${description} = Seem admit reality begin despite.</msg>
<status status="PASS" starttime="20200225 23:48:48.156" endtime="20200225 23:48:48.157"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/products</arg>
<arg>{ "name": "${name}", "description": "${description}" }</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.157" endtime="20200225 23:48:48.652"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.653" endtime="20200225 23:48:48.654"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.655" endtime="20200225 23:48:48.657"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body id</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.658" endtime="20200225 23:48:48.658"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body name</arg>
<arg>${name}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.659" endtime="20200225 23:48:48.659"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body description</arg>
<arg>${description}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.660" endtime="20200225 23:48:48.660"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:48.155" endtime="20200225 23:48:48.660" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="GET non existent product">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/products/123</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.661" endtime="20200225 23:48:48.667"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:48.668" endtime="20200225 23:48:48.669"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:48.661" endtime="20200225 23:48:48.669" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="CREATE random product and verify with GET">
<kw name="Sentence" library="FakerLibrary">
<doc>Generate a random sentence
:example 'Lorem ipsum dolor sit amet.'</doc>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20200225 23:48:48.671" level="INFO">${name} = Fine watch successful poor.</msg>
<status status="PASS" starttime="20200225 23:48:48.670" endtime="20200225 23:48:48.671"></status>
</kw>
<kw name="Sentence" library="FakerLibrary">
<doc>Generate a random sentence
:example 'Lorem ipsum dolor sit amet.'</doc>
<assign>
<var>${description}</var>
</assign>
<msg timestamp="20200225 23:48:48.671" level="INFO">${description} = Free coach food.</msg>
<status status="PASS" starttime="20200225 23:48:48.671" endtime="20200225 23:48:48.671"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>/products</arg>
<arg>{ "name": "${name}", "description": "${description}" }</arg>
</arguments>
<assign>
<var>&amp;{res}</var>
</assign>
<msg timestamp="20200225 23:48:49.085" level="INFO">&amp;{res} = { seconds=0.409486 | status=201 | body={'id': '263ac462-082b-4648-aaf3-8593f0f6d774', 'name': 'Fine watch successful poor.', 'description': 'Free coach food.'} | headers={'Connection': 'keep-alive', '...</msg>
<status status="PASS" starttime="20200225 23:48:48.672" endtime="20200225 23:48:49.085"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.085" endtime="20200225 23:48:49.086"></status>
</kw>
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/products/${res.body['id']}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.086" endtime="20200225 23:48:49.106"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.106" endtime="20200225 23:48:49.107"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body name</arg>
<arg>${name}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.107" endtime="20200225 23:48:49.107"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body description</arg>
<arg>${description}</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.108" endtime="20200225 23:48:49.108"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:48.669" endtime="20200225 23:48:49.108" critical="yes"></status>
</test>
<doc>Test scenarios for products method.</doc>
<status status="PASS" starttime="20200225 23:48:48.151" endtime="20200225 23:48:49.109"></status>
</suite>
<suite id="s1-s3" name="System" source="/media/EXT/app/work/applifting/productmaker/services/tests/api/atest/system.robot">
<test id="s1-s3-t1" name="GET invalid page, negative test">
<kw name="Get" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a GET request to the endpoint.*</doc>
<arguments>
<arg>/404/notfound</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.117" endtime="20200225 23:48:49.123"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>404</arg>
</arguments>
<status status="PASS" starttime="20200225 23:48:49.123" endtime="20200225 23:48:49.124"></status>
</kw>
<status status="PASS" starttime="20200225 23:48:49.117" endtime="20200225 23:48:49.124" critical="yes"></status>
</test>
<doc>Test scenarios for healtcheck method.</doc>
<status status="PASS" starttime="20200225 23:48:49.111" endtime="20200225 23:48:49.124"></status>
</suite>
<status status="PASS" starttime="20200225 23:48:47.496" endtime="20200225 23:48:49.126"></status>
</suite>
<statistics>
<total>
<stat pass="6" fail="0">Critical Tests</stat>
<stat pass="6" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="6" fail="0" id="s1" name="Atest">Atest</stat>
<stat pass="2" fail="0" id="s1-s1" name="Healthcheck">Atest.Healthcheck</stat>
<stat pass="3" fail="0" id="s1-s2" name="Products">Atest.Products</stat>
<stat pass="1" fail="0" id="s1-s3" name="System">Atest.System</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
